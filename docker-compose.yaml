version: '3'
services:
    
    php:
        container_name: php
        build:
            context: .
            dockerfile: ./infrastructure/php/Dockerfile
            args:
                GIT_USER_NAME: ${GIT_USER_NAME}
                GIT_USER_SURNAME: ${GIT_USER_SURNAME}
                GIT_USER_EMAIL: ${GIT_USER_EMAIL}
        ports:
            - '90:90'
        volumes:
            - ./app:/var/www/symfony_docker
        environment:
            GIT_USER_NAME: FromDockerCompose
        restart: unless-stopped

    symfony-nginx:
        container_name: symfony-nginx
        image: nginx:stable-alpine
        ports:
            - ${SYMFONY_PORT}:80
        volumes:
            - ./app:/var/www/symfony_docker
            - ./infrastructure/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
        links:
            - php
        restart: unless-stopped

    mariadb:
        container_name: symfony-mariadb
        image: mariadb:latest
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_HOST: '%'
        volumes:
            - ${PWD}/infrastructure/databases/mariadb:/var/lib/mysql
        ports:
            - ${MSQL_PORT}:3306
        restart: unless-stopped
    
    adminer:
        container_name: symfony-adminer
        image: adminer:latest
        ports:
            - ${ADMINER_PORT}:8080
        restart: unless-stopped
    
    rabbitmq:
        container_name: symfony-rabbitmq
        image: rabbitmq
        restart: unless-stopped
        ports:
            - ${AMQP_CLIENT_RABBITMQ}:5672
            - ${WEB_SERVICE_RABBITMQ}:15672
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    
    portainer:
        container_name: symfony-portainer
        image: portainer/portainer-ce
        ports:
            - "${WEB_SERVICE_PORTAINER_PORT}:9000"
        command: -H unix:///var/run/docker.sock
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data
        restart: unless-stopped

volumes:
    portainer_data: